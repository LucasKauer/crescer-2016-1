@model ExemploModels.Models.ExemploComplexoModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>View</title>
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <style>
        .container {
            padding: 50px;
        }
    </style>
</head>
<body>
    <h1>@ViewBag.Mensagem</h1>
    <div class="container">
        @using (Html.BeginForm("SalvarCadastroComplexo", "Exemplo", FormMethod.Post))
        {
            <div class="form-horizontal">
                <h4>Cadastro Mais Complexo</h4>
                <hr />

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Idade, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Idade, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Idade, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DataNascimento, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.DataNascimento, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Peso, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Peso, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Peso, "", new { @class = "text-danger" })                        
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AceitouTermosServico, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.CheckBoxFor(model => model.AceitouTermosServico, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AceitouTermosServico, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Sexo, htmlAttributes: new { @class = "control-label col-md-2" })

                    <div class="col-md-10">
                        @Html.RadioButtonFor(m => m.Sexo, "M") Masculino
                        @Html.RadioButtonFor(m => m.Sexo, "F") Feminino
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IdPersonagemFavorito, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.IdPersonagemFavorito, (List<SelectListItem>)ViewBag.ListaPersonagens, "Selecione...", new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

    </div>

    <script type="text/javascript">
        $.validator.methods.number = function (value, element) {
            var regex = /^(\d*)(\,\d{1,2})?$/; //99999,99
            return this.optional(element) || regex.test(value);
        }

        $.validator.methods.date = function (value, element) {
            var date = new Date(value.replace(/(\d{2})[/](\d{2})[/](\d{4})/, "$2/$1/$3")); //31/12/2015
            return this.optional(element) || !/Invalid|NaN/.test(date.toString());
        }
    </script>

    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
</body>
</html>
